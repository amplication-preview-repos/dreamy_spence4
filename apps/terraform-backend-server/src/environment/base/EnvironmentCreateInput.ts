/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { Type } from "class-transformer";
import { ProjectWhereUniqueInput } from "../../project/base/ProjectWhereUniqueInput";
import { SnapshotCreateNestedManyWithoutEnvironmentsInput } from "./SnapshotCreateNestedManyWithoutEnvironmentsInput";
import { StateCreateNestedManyWithoutEnvironmentsInput } from "./StateCreateNestedManyWithoutEnvironmentsInput";

@InputType()
class EnvironmentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProjectWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProjectWhereUniqueInput)
  @IsOptional()
  @Field(() => ProjectWhereUniqueInput, {
    nullable: true,
  })
  project?: ProjectWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => SnapshotCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => SnapshotCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => SnapshotCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  snapshots?: SnapshotCreateNestedManyWithoutEnvironmentsInput;

  @ApiProperty({
    required: false,
    type: () => StateCreateNestedManyWithoutEnvironmentsInput,
  })
  @ValidateNested()
  @Type(() => StateCreateNestedManyWithoutEnvironmentsInput)
  @IsOptional()
  @Field(() => StateCreateNestedManyWithoutEnvironmentsInput, {
    nullable: true,
  })
  states?: StateCreateNestedManyWithoutEnvironmentsInput;
}

export { EnvironmentCreateInput as EnvironmentCreateInput };
